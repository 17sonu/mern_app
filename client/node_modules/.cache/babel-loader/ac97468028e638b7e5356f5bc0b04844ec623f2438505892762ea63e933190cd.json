{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\mern app\\\\client\\\\src\\\\components\\\\EmployeeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeForm = ({\n  refreshEmployees\n}) => {\n  _s();\n  const [employee, setEmployee] = useState({\n    name: '',\n    email: '',\n    position: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await axios.post('http://localhost:5000/api/employees', employee);\n    setEmployee({\n      name: '',\n      email: '',\n      position: ''\n    });\n    refreshEmployees(); // Refresh the list after adding\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: employee.name,\n      placeholder: \"Name\",\n      onChange: e => setEmployee({\n        ...employee,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: employee.email,\n      placeholder: \"Email\",\n      onChange: e => setEmployee({\n        ...employee,\n        email: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: employee.position,\n      placeholder: \"Position\",\n      onChange: e => setEmployee({\n        ...employee,\n        position: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n_s(EmployeeForm, \"L6KKiP3fQN9qJzp8JEUAmQpPaqQ=\");\n_c = EmployeeForm;\nexport default EmployeeForm;\nvar _c;\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","EmployeeForm","refreshEmployees","_s","employee","setEmployee","name","email","position","handleSubmit","e","preventDefault","post","onSubmit","children","type","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/mern app/client/src/components/EmployeeForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst EmployeeForm = ({ refreshEmployees }) => {\r\n   const [employee, setEmployee] = useState({ name: '', email: '', position: '' });\r\n\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      await axios.post('http://localhost:5000/api/employees', employee);\r\n      setEmployee({ name: '', email: '', position: '' });\r\n      refreshEmployees(); // Refresh the list after adding\r\n   };\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input type=\"text\" value={employee.name} placeholder=\"Name\" onChange={e => setEmployee({ ...employee, name: e.target.value })} />\r\n         <input type=\"email\" value={employee.email} placeholder=\"Email\" onChange={e => setEmployee({ ...employee, email: e.target.value })} />\r\n         <input type=\"text\" value={employee.position} placeholder=\"Position\" onChange={e => setEmployee({ ...employee, position: e.target.value })} />\r\n         <button type=\"submit\">Add Employee</button>\r\n      </form>\r\n   );\r\n};\r\n\r\nexport default EmployeeForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IAAES,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAE/E,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMb,KAAK,CAACc,IAAI,CAAC,qCAAqC,EAAER,QAAQ,CAAC;IACjEC,WAAW,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;IAClDN,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACGF,OAAA;IAAMa,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBAC1Bd,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEZ,QAAQ,CAACE,IAAK;MAACW,WAAW,EAAC,MAAM;MAACC,QAAQ,EAAER,CAAC,IAAIL,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEE,IAAI,EAAEI,CAAC,CAACS,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjIvB,OAAA;MAAOe,IAAI,EAAC,OAAO;MAACC,KAAK,EAAEZ,QAAQ,CAACG,KAAM;MAACU,WAAW,EAAC,OAAO;MAACC,QAAQ,EAAER,CAAC,IAAIL,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEG,KAAK,EAAEG,CAAC,CAACS,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrIvB,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEZ,QAAQ,CAACI,QAAS;MAACS,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAER,CAAC,IAAIL,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEI,QAAQ,EAAEE,CAAC,CAACS,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7IvB,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEb,CAAC;AAACpB,EAAA,CAlBIF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}